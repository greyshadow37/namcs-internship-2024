# -*- coding: utf-8 -*-
"""Model.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kMXlbwHbNJPCVdNmMQ1HDWPWv9PWhGKn
"""

import joblib
import pandas as pd
import warnings
warnings.filterwarnings('ignore')

df= pd.read_excel('preprocessed_data.xlsx')

df = df.drop(columns=['Unnamed: 0', 'Date'])

from sklearn.preprocessing import LabelEncoder
label_encoder = LabelEncoder()
df['WeatherCondition'] = label_encoder.fit_transform(df['WeatherCondition'])

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, classification_report,confusion_matrix

X = df[['Temperature', 'Precipitation', 'Humidity']]
# Using WeatherCondition as the target variable
y = df['WeatherCondition']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

lr_model = LogisticRegression(random_state=42, max_iter=1000, multi_class='multinomial', solver='lbfgs')
lr_model.fit(X_train, y_train)
lr_predictions = lr_model.predict(X_test)
lr_accuracy = accuracy_score(y_test, lr_predictions)
print(f'Logistic Regression Accuracy: {lr_accuracy}')
print(classification_report(y_test, lr_predictions))

lr_conf_matrix = confusion_matrix(y_test, lr_predictions)
print('Confusion Matrix for Logistic Regression:')
print(lr_conf_matrix)

joblib.dump(lr_model,"model.pkl")
joblib.dump(label_encoder, 'label_encoder.pkl')
